## reverse Proxy
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=rfak.it@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - opensearch-net
    <<: *default-opts
    
## opensearch Dashboard Label for treafik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`elk.leminar.ir`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
 
## logstash
  logstash01:
    image: docker.elastic.co/logstash/logstash-oss:7.10.2
    container_name: logstash01
    restart: always
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - type: bind
        source: ./logstash/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml
        read_only: false
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx4g -Xms4g"
      PIPELINE_WORKERS: "8"
    networks:
      - opensearch-net
    <<: *default-opts
